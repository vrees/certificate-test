version: '3.7'
services:

  traefik:
    image: "traefik:v2.5"
    container_name: "traefik"
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
      - "8080:8080" # traefik dashboard
    command:
      - --api.insecure=true
      - --api.dashboard=true
      - --api.debug=false
      - --log.level=DEBUG
      - --providers.docker=true
      - --providers.docker.swarmMode=true
      - --providers.docker.exposedbydefault=false
      - --providers.docker.network=traefik
      - --entrypoints.web.address=:80
      - --entrypoints.web-secured.address=:443
      - --providers.file.directory=/configuration/
      - --providers.file.watch=true


    #          - "traefik.docker.network=traefik"
    networks:
      - traefik
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock:ro"
#      - "./traefik.yml:/etc/traefik/traefik.yml"
      - "./configuration:/configuration"

  postgres:
    container_name: postgres
    image: postgres
    restart: unless-stopped
    environment:
      - POSTGRES_USER=myatupri_api_user
      - POSTGRES_PASSWORD=myatupri_api
      - POSTGRES_DB=myatupri_api
    ports:
      - "5432:5432"
    volumes:
      - /home/vrees/IOTstack/volumes/postgres/data:/var/lib/postgresql/data

  portainer-ce:
    container_name: portainer-ce
    image: portainer/portainer-ce
    restart: unless-stopped
    ports:
      - "8000:8000"
      - "9000:9000"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - /home/vrees/IOTstack/volumes/portainer-ce/data:/data

networks:
  traefik:
#    external: true
    name: traefik
